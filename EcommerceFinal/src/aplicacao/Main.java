package aplicacao;

import dominio.*;
import repositorio.*;
import servico.*;

public class Main {
    public static void main(String[] args) {
        IRepositorioCliente repoCliente = new RepositorioClienteEmMemoria();
        IRepositorioProduto repoProduto = new RepositorioProdutoEmMemoria();
        IRepositorioPedido repoPedido = new RepositorioPedidoEmMemoria();
        IServicoNotificacao notificacao = new ServicoNotificacaoEmail();
        ValidacaoPedido validacao = new ValidacaoPedido();

        ServicoPedido servicoPedido = new ServicoPedido(
                repoCliente, repoProduto, repoPedido, notificacao, validacao);

        // 1Ô∏è‚É£ Criar cliente e produto
        Cliente cliente = new Cliente("Carlos", "123.456.789-00");
        Produto produto = new Produto("Notebook", 3500);
        repoCliente.salvar(cliente);
        repoProduto.salvar(produto);

        // 2Ô∏è‚É£ Criar pedido
        Pedido pedido = servicoPedido.criarPedido(cliente.getId());
        System.out.println("‚úÖ Pedido criado com ID: " + pedido.getId() +
                " | Status: " + pedido.getStatus() +
                " | Data: " + pedido.getDataCriacao());

// 3Ô∏è‚É£ Adicionar item
        servicoPedido.adicionarItem(pedido.getId(), produto.getId(), 1);
        System.out.println("üõí Produto adicionado: " + produto.getNome() +
                " | Quantidade: 1 | Total pedido: R$ " + pedido.calcularTotal());

// 4Ô∏è‚É£ Finalizar pedido
        servicoPedido.finalizarPedido(pedido.getId());
        System.out.println("üìå Status do pagamento: " + pedido.getStatusPagamento());

// 5Ô∏è‚É£ Realizar pagamento
        servicoPedido.realizarPagamento(pedido.getId());
        System.out.println("üí≥ Pagamento realizado. Status pagamento: " + pedido.getStatusPagamento());

// 6Ô∏è‚É£ Entregar pedido
        servicoPedido.entregarPedido(pedido.getId());
        System.out.println("üì¶ Pedido entregue. Status final: " + pedido.getStatus());

    }
}
